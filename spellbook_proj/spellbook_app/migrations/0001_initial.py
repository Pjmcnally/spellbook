# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-27 21:57
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CastingTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(help_text='A label for URL config', max_length=100, unique=True)),
            ],
            options={
                'ordering': ['text'],
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('slug', models.SlugField(help_text='A lable for URL config', max_length=20, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=20, unique=True)),
                ('short_name', models.CharField(max_length=1, unique=True)),
                ('slug', models.SlugField(help_text='A lable for URL config', max_length=1, unique=True)),
            ],
            options={
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('slug', models.SlugField(help_text='A lable for URL config', max_length=20, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Duration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(help_text='A label for URL config', max_length=100, unique=True)),
            ],
            options={
                'ordering': ['text'],
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=20, unique=True)),
                ('ord_text', models.CharField(max_length=20, unique=True)),
                ('slug', models.SlugField(help_text='A lable for URL config', max_length=20, unique=True)),
                ('num', models.SmallIntegerField()),
            ],
            options={
                'ordering': ['num'],
            },
        ),
        migrations.CreateModel(
            name='Range',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(help_text='A label for URL config', max_length=100, unique=True)),
            ],
            options={
                'ordering': ['text'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('slug', models.SlugField(help_text='A lable for URL config', max_length=20, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, unique=True)),
                ('short_name', models.CharField(max_length=10, unique=True)),
                ('slug', models.SlugField(help_text='A lable for URL config', max_length=20, unique=True)),
                ('link', models.URLField(max_length=255)),
                ('public', models.BooleanField()),
            ],
            options={
                'ordering': ['short_name'],
            },
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(help_text='A lable for URL config', max_length=100, unique=True)),
                ('text', models.TextField()),
                ('concentration', models.BooleanField()),
                ('ritual', models.BooleanField()),
                ('cast_time_text', models.CharField(max_length=100, null=True)),
                ('component_text', models.CharField(max_length=100, null=True)),
                ('range_text', models.CharField(max_length=100, null=True)),
                ('_class', models.ManyToManyField(related_name='_class', to='spellbook_app.Class')),
                ('_range', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spellbook_app.Range')),
                ('casting_time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spellbook_app.CastingTime')),
                ('component', models.ManyToManyField(related_name='component', to='spellbook_app.Component')),
                ('duration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spellbook_app.Duration')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spellbook_app.Level')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spellbook_app.School')),
            ],
            options={
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SpellSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(max_length=20)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spellbook_app.Source')),
                ('spell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spellbook_app.Spell')),
            ],
            options={
                'ordering': ['source', 'spell'],
            },
        ),
        migrations.CreateModel(
            name='SubDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('slug', models.SlugField(help_text='A lable for URL config', max_length=20)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spellbook_app.Domain')),
            ],
            options={
                'ordering': ['domain', 'name'],
            },
        ),
        migrations.AddField(
            model_name='spell',
            name='sub_domain',
            field=models.ManyToManyField(blank=True, related_name='sub_domain', to='spellbook_app.SubDomain'),
        ),
        migrations.AddField(
            model_name='source',
            name='spells',
            field=models.ManyToManyField(through='spellbook_app.SpellSource', to='spellbook_app.Spell'),
        ),
        migrations.AlterUniqueTogether(
            name='subdomain',
            unique_together=set([('name', 'domain'), ('slug', 'domain')]),
        ),
    ]
